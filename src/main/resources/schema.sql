
CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT pk_users PRIMARY KEY (id),
  CONSTRAINT uq_users_email UNIQUE (email),
  CONSTRAINT ck_users_name_not_blank CHECK (length(btrim(name)) > 0),
  CONSTRAINT ck_users_email_not_blank CHECK (length(btrim(email)) > 0)
);

CREATE INDEX IF NOT EXISTS idx_users_email_lower ON users (lower(email));

CREATE TABLE IF NOT EXISTS items (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  description TEXT,
  available BOOLEAN NOT NULL DEFAULT TRUE,
  owner_id BIGINT NOT NULL,
  request_id BIGINT NULL,
  CONSTRAINT pk_items PRIMARY KEY (id),
  CONSTRAINT fk_items_owner FOREIGN KEY (owner_id) REFERENCES users(id) ON DELETE CASCADE,
  CONSTRAINT ck_items_name_not_blank CHECK (length(btrim(name)) > 0)
);

CREATE INDEX IF NOT EXISTS idx_items_owner_id ON items (owner_id);
CREATE INDEX IF NOT EXISTS idx_items_request_id ON items (request_id);

CREATE TABLE IF NOT EXISTS bookings (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  item_id BIGINT NOT NULL,
  booker_id BIGINT NOT NULL,
  status VARCHAR(20) NOT NULL,
  created TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT NOW(),
  CONSTRAINT pk_bookings PRIMARY KEY (id),
  CONSTRAINT fk_bookings_item FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE,
  CONSTRAINT fk_bookings_booker FOREIGN KEY (booker_id) REFERENCES users(id) ON DELETE CASCADE,
  CONSTRAINT ck_bookings_time CHECK (end_time > start_time),
  CONSTRAINT ck_bookings_status CHECK (status IN ('WAITING', 'APPROVED', 'REJECTED', 'CANCELED'))
);

CREATE INDEX IF NOT EXISTS idx_bookings_item_id ON bookings (item_id);
CREATE INDEX IF NOT EXISTS idx_bookings_booker_id ON bookings (booker_id);
CREATE INDEX IF NOT EXISTS idx_bookings_status ON bookings (status);
CREATE INDEX IF NOT EXISTS idx_bookings_start_time ON bookings (start_time);
CREATE INDEX IF NOT EXISTS idx_bookings_item_status_time
  ON bookings (item_id, status, start_time, end_time);
CREATE INDEX IF NOT EXISTS idx_bookings_booker_start
  ON bookings (booker_id, start_time);

CREATE TABLE IF NOT EXISTS comments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  text VARCHAR(1000) NOT NULL,
  item_id BIGINT NOT NULL,
  author_id BIGINT NOT NULL,
  created TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT NOW(),
  CONSTRAINT pk_comments PRIMARY KEY (id),
  CONSTRAINT fk_comments_item FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE,
  CONSTRAINT fk_comments_author FOREIGN KEY (author_id) REFERENCES users(id) ON DELETE CASCADE,
  CONSTRAINT ck_comments_text_not_blank CHECK (length(btrim(text)) > 0)
);

CREATE INDEX IF NOT EXISTS idx_comments_item_id ON comments (item_id);
CREATE INDEX IF NOT EXISTS idx_comments_author_id ON comments (author_id);
CREATE INDEX IF NOT EXISTS idx_comments_created ON comments (created);

CREATE TABLE IF NOT EXISTS requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  description VARCHAR(2000) NOT NULL,
  requester_id BIGINT NOT NULL,
  created TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT now(),
  CONSTRAINT pk_requests PRIMARY KEY (id),
  CONSTRAINT fk_requests_requester FOREIGN KEY (requester_id) REFERENCES users(id) ON DELETE CASCADE
);

ALTER TABLE bookings
  ADD COLUMN IF NOT EXISTS created TIMESTAMP WITHOUT TIME ZONE
  NOT NULL DEFAULT NOW();


CREATE INDEX IF NOT EXISTS idx_bookings_item_status_time
  ON bookings (item_id, status, start_time, end_time);

CREATE INDEX IF NOT EXISTS idx_bookings_booker_start
  ON bookings (booker_id, start_time);